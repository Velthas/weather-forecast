(()=>{const e=function(e){const t={};return t.temperature=e.main.temp,t.tempfeelslike=e.main.feels_like,t.humidity=e.main.humidity,t.windspeed=e.wind.speed,t.description=e.weather[0].description.slice(0,1).toUpperCase()+e.weather[0].description.slice(1),t.city=e.name,t.country=e.sys.country,console.log(t),t},t=async function(){const e=await fetch("https://api.openweathermap.org/data/2.5/weather?q=Rome&APPID=481dab978a20a42998a631eff7d4f8f4&units=metric",{mode:"cors"}),t=await e.json();return console.log(t),t};!async function(){let n=await t(),i=e(n);console.log(i)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUFBQSxNQUFNQSxFQXVCRixTQUE2QkMsR0FHekIsTUFBTUMsRUFBVSxDQUFDLEVBb0JqQixPQWpCQUEsRUFBUUMsWUFBY0YsRUFBY0csS0FBS0MsS0FDekNILEVBQVFJLGNBQWdCTCxFQUFjRyxLQUFLRyxXQUMzQ0wsRUFBUU0sU0FBV1AsRUFBY0csS0FBS0ksU0FDdENOLEVBQVFPLFVBQVlSLEVBQWNTLEtBQUtDLE1BS3ZDVCxFQUFRVSxZQUFjWCxFQUFjQyxRQUFRLEdBQUdVLFlBQVlDLE1BQU0sRUFBRyxHQUFHQyxjQUFnQmIsRUFBY0MsUUFBUSxHQUFHVSxZQUFZQyxNQUFNLEdBR2xJWCxFQUFRYSxLQUFPZCxFQUFjZSxLQUM3QmQsRUFBUWUsUUFBVWhCLEVBQWNpQixJQUFJRCxRQUdwQ0UsUUFBUUMsSUFBSWxCLEdBRUxBLENBQ1gsRUEvQ0VGLEVBRUZxQixpQkFHSSxNQU1NQyxRQUFpQkMsTUFISCw2R0FHc0IsQ0FBRUMsS0FBTSxTQUU1Q0MsUUFBb0JILEVBQVNJLE9BSW5DLE9BRkFQLFFBQVFDLElBQUlLLEdBRUxBLENBQ1gsR0EyQ0FKLGlCQUVJLElBQUlNLFFBQWMzQixJQUVkNEIsRUFBTzVCLEVBQTBDMkIsR0FDckRSLFFBQVFDLElBQUlRLEVBQ2hCLENBRUFDLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFdlYXRoZXJBcGlJbnRlcmFjdGlvbiA9IChmdW5jdGlvbiAoKSB7XG5cbiAgICBhc3luYyBmdW5jdGlvbiBmZXRjaEFwaURhdGEoKSB7XG5cbiAgICAgICAgLy8gVGhpcyBpcyBqdXN0IGEgbW9tZW50YXJ5IHBsYWNlaG9sZGVyIHF1ZXJ5IGZvciB0ZXN0aW5nXG4gICAgICAgIGNvbnN0IHBsYWNlaG9sZGVyUXVlcnkgPSAnUm9tZSc7XG4gICAgICAgIC8vIEJhc2UgVVJMIGZvciB0aGUgcXVlcnlcbiAgICAgICAgLy8gSSBtYWRlIHN1cmUgdG8gc2xhcCBvbiB0aGUgdW5pdHM9bWV0cmljIHRvIHJldHVybiB2YWx1ZXMgSSBjYW4gdW5kZXJzdGFuZFxuICAgICAgICBjb25zdCBhcGlRdWVyeVVybCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7cGxhY2Vob2xkZXJRdWVyeX0mQVBQSUQ9NDgxZGFiOTc4YTIwYTQyOTk4YTYzMWVmZjdkNGY4ZjQmdW5pdHM9bWV0cmljYDtcblxuICAgICAgICAvLyBVc2luZyB0aGUgZmV0Y2ggbWV0aG9kIHdlIHF1ZXJ5IHRoZSBzZXJ2ZXIsIGFuZCB3ZSBnZXQgYmFjayBhIHJlc3BvbnNlIG9iamVjdC5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChhcGlRdWVyeVVybCwgeyBtb2RlOiAnY29ycycgfSk7XG4gICAgICAgIC8vIFdlIG5lZWQgdG8gZXh0cmFjdCB0aGUgaW5mb3JtYXRpb24gd2UgbmVlZCwgYW5kIGZvciB0aGF0IHdlIGNhbGwgdGhlIC5qc29uIG1ldGhvZC5cbiAgICAgICAgY29uc3Qgd2VhdGhlckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIC8vIENvbnNvbGUgbG9nIHRvIHNlZSBpZiBpdCdzIHdvcmtpbmcuXG4gICAgICAgIGNvbnNvbGUubG9nKHdlYXRoZXJEYXRhKTtcbiAgICAgICAgLy8gUmV0dXJuIHRoZSBkYXRhIGF0IGxhc3RcbiAgICAgICAgcmV0dXJuIHdlYXRoZXJEYXRhO1xuICAgIH1cblxuICAgIC8vIFRoaXMgdGFrZXMgdGhlIEpTT04gZGF0YSByZXR1cm5lZCBieSB0aGUgQVBJXG4gICAgLy8gYW5kIGV4dHJhY3RzIG9ubHkgdGhlIHRoaW5ncyB3ZSB3aWxsIGRpc3BsYXlcbiAgICAvLyBUZWNobmljYWxseSB1bm5lY2Vzc2FyeSwgYnV0IGltcHJvdmVkIHJlYWRpYmlsaXR5XG4gICAgZnVuY3Rpb24gZXh0cmFjdFJlbGV2YW50RGF0YSh3ZWF0aGVyT2JqZWN0KSB7XG5cbiAgICAgICAgLy8gT2JqZWN0IGxpdGVyYWwgZGVjbGFyYXRpb25cbiAgICAgICAgY29uc3Qgd2VhdGhlciA9IHt9O1xuICAgICAgICBcbiAgICAgICAgLy8gSW5mb3JtYXRpb24gYWJvdXQgdGhlIHdlYXRoZXIgaXRzZWxmXG4gICAgICAgIHdlYXRoZXIudGVtcGVyYXR1cmUgPSB3ZWF0aGVyT2JqZWN0Lm1haW4udGVtcDtcbiAgICAgICAgd2VhdGhlci50ZW1wZmVlbHNsaWtlID0gd2VhdGhlck9iamVjdC5tYWluLmZlZWxzX2xpa2U7XG4gICAgICAgIHdlYXRoZXIuaHVtaWRpdHkgPSB3ZWF0aGVyT2JqZWN0Lm1haW4uaHVtaWRpdHk7XG4gICAgICAgIHdlYXRoZXIud2luZHNwZWVkID0gd2VhdGhlck9iamVjdC53aW5kLnNwZWVkO1xuICAgICAgICBcbiAgICAgICAgLy8gQSB3b3JkeSBkZXNjcmlwdGlvbiBvZiBob3cgdGhlIHNreSBpcyBsaWtlXG4gICAgICAgIC8vIFRoaXMgY29kZSByZXR1cm5zIGEgY2FwaXRhbGl6ZWQgZGVzY3JpcHRpb24gcHJvcGVydHlcbiAgICAgICAgLy8gQnkgZGVmYXVsdCBpdCBpcyBhbGwgbG93ZXJjYXNlXG4gICAgICAgIHdlYXRoZXIuZGVzY3JpcHRpb24gPSB3ZWF0aGVyT2JqZWN0LndlYXRoZXJbMF0uZGVzY3JpcHRpb24uc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSArIHdlYXRoZXJPYmplY3Qud2VhdGhlclswXS5kZXNjcmlwdGlvbi5zbGljZSgxKTtcbiAgICAgICAgXG4gICAgICAgIC8vIENvdW50cnkncyBuYW1lIGFuZCBjaXR5J3MgbmFtZTtcbiAgICAgICAgd2VhdGhlci5jaXR5ID0gd2VhdGhlck9iamVjdC5uYW1lO1xuICAgICAgICB3ZWF0aGVyLmNvdW50cnkgPSB3ZWF0aGVyT2JqZWN0LnN5cy5jb3VudHJ5O1xuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgdGhlIHJlc3VsdFxuICAgICAgICBjb25zb2xlLmxvZyh3ZWF0aGVyKTtcbiAgICAgICAgLy8gUmV0dXJuIHRoZSByZXN1bHRcbiAgICAgICAgcmV0dXJuIHdlYXRoZXI7XG4gICAgfVxuIFxuICAgIHJldHVybiB7ZXh0cmFjdFJlbGV2YW50RGF0YSwgZmV0Y2hBcGlEYXRhfVxuICAgIFxuXG59KSgpO1xuXG5jb25zdCBhcHBsaWNhdGlvbkZsb3cgPSAoZnVuY3Rpb24oKSB7XG4gXG4gICAgLy8gVGhpcyBhc3luYyBmdW5jdGlvbiBhbGxvd3MgbWUgb3JnYW5pemUgY29kZSBpbiBhIHdheVxuICAgIC8vIHRoYXQgbWFrZXMgaXQgc2VlbSBzeW5jaHJvbm91cywgc28gZXhlY3V0aW5nIHRvcCB0byBib3R0b20uXG4gICAgLy8gV2UgY2Fubm90IGNhbGwgb3VyIHNlY29uZCBmdW5jdGlvbiBiZWZvcmUgdGhlIGZpcnN0XG4gICAgLy8gcHJvbWlzZSByZXNvbHZlczogbHVja2lseSBhc3luYyBmdW5jdGlvbnMgY2FuIGhlbHAgdXNcbiAgICAvLyBzb2x2ZSB0aGF0IHByb2JsZW0gaW4gYW4gZWxlZ2FudCBhbmQgcmVhZGFibGUgd2F5LlxuICAgIGFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJJbmZvKCkge1xuICAgICAgICAvLyBXZSBnZXQgYSBwcm9taXNlIGZyb20gZmV0Y2hBcGlEYXRhLCB3YWl0IHVudGlsIGl0J3MgcmVzb2x2ZWRcbiAgICAgICAgbGV0IGhlbGxvID0gYXdhaXQgV2VhdGhlckFwaUludGVyYWN0aW9uLmZldGNoQXBpRGF0YSgpO1xuICAgICAgICAvLyBUaGVuIHVzZSB0aGlzIHRvIHJldHVybiB0aGUgb2JqZWN0IHdpdGggY29uZGVuc2VkIGluZm9cbiAgICAgICAgbGV0IGRhdGEgPSBXZWF0aGVyQXBpSW50ZXJhY3Rpb24uZXh0cmFjdFJlbGV2YW50RGF0YShoZWxsbyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIH1cbiBcbiAgICBnZXRXZWF0aGVySW5mbygpO1xuIFxufSkoKTsiXSwibmFtZXMiOlsiV2VhdGhlckFwaUludGVyYWN0aW9uIiwid2VhdGhlck9iamVjdCIsIndlYXRoZXIiLCJ0ZW1wZXJhdHVyZSIsIm1haW4iLCJ0ZW1wIiwidGVtcGZlZWxzbGlrZSIsImZlZWxzX2xpa2UiLCJodW1pZGl0eSIsIndpbmRzcGVlZCIsIndpbmQiLCJzcGVlZCIsImRlc2NyaXB0aW9uIiwic2xpY2UiLCJ0b1VwcGVyQ2FzZSIsImNpdHkiLCJuYW1lIiwiY291bnRyeSIsInN5cyIsImNvbnNvbGUiLCJsb2ciLCJhc3luYyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwid2VhdGhlckRhdGEiLCJqc29uIiwiaGVsbG8iLCJkYXRhIiwiZ2V0V2VhdGhlckluZm8iXSwic291cmNlUm9vdCI6IiJ9